apiVersion: v1
kind: Service
metadata:
  name: d-neo4j-0
  labels:
    name: d-neo4j-0
spec:
  ports:
    # the port that this service should serve on
  - port: 80
    targetPort: 7474
    name: "browser"
  - port: 5000
    targetPort: 5000
    name: discovery
  - port: 6000
    targetPort: 6000  
    name: tx
  - port: 7000
    targetPort: 7000  
    name: raft
  - port: 7474
    targetPort: 7474
    name: browser-internal
  - port: 7687
    targetPort: 7687
    name: bolt          
  clusterIP: None
  selector:
    name: d-neo4j-0
---
kind: StorageClass
apiVersion: storage.k8s.io/v1beta1
metadata:
  name: d-neo4j-0-pd-ssd
provisioner: kubernetes.io/gce-pd
parameters:
  type: pd-ssd
  zone: asia-east1-a
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: d-neo4j-0
  annotations:
    volume.beta.kubernetes.io/storage-class: "d-neo4j-0-pd-ssd"
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: a-neo4j-0
  annotations:
    volume.alpha.kubernetes.io/storage-class: anything
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
      
---    
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: d-neo4j-0
spec:
  replicas: 1
  # serviceName: d-neo4j-0
  template:
    metadata:
      annotations:
        pod.beta.kubernetes.io/hostname: d-neo4j-0
        pod.alpha.kubernetes.io/initialized: "true"
        pod.beta.kubernetes.io/init-containers: '[
            {
                "name": "install",
                "image": "gcr.io/google_containers/busybox:1.24",
                "imagePullPolicy": "Always",
                "command": ["/bin/sh", "-c", "echo \"
                unsupported.dbms.edition=enterprise\n
                dbms.security.auth_enabled=false\n
                dbms.mode=CORE\n
                dbms.connectors.default_advertised_address=$(hostname -f)\n
                dbms.connectors.default_listen_address=0.0.0.0\n
                dbms.connector.bolt.type=BOLT\n
                dbms.connector.bolt.enabled=true\n
                dbms.connector.bolt.listen_address=0.0.0.0:7687\n
                dbms.connector.http.type=HTTP\n
                dbms.connector.http.enabled=true\n
                dbms.connector.http.listen_address=0.0.0.0:7474\n
                causal_clustering.raft_messages_log_enable=true\n
                causal_clustering.initial_discovery_members=d-neo4j-0:5000,d-neo4j-1:5000\n
                causal_clustering.leader_election_timeout=20s\n
                  \" > /work-dir/neo4j.conf" ],
                "volumeMounts": [
                    {
                        "name": "a-neo4j-0",
                        "mountPath": "/work-dir"
                    }
                ]
            }
        ]'        
      labels:
        name: d-neo4j-0
        tier: database
    spec:
      volumes:
        - name: d-neo4j-0
          persistentVolumeClaim:
            claimName: d-neo4j-0
        - name: a-neo4j-0
          persistentVolumeClaim:
            claimName: a-neo4j-0            
      containers:
      - name: neo4j
        image: neo4j:3.1.1-enterprise
        # command:
        imagePullPolicy: Always
        ports:
        - containerPort: 5000
          hostPort: 5000
          name: discovery
        - containerPort: 6000
          hostPort: 6000        
          name: tx
        - containerPort: 7000
          hostPort: 7000        
          name: raft
        - containerPort: 7474
          hostPort: 7474
          name: browser
        - containerPort: 7687
          hostPort: 7687
          name: bolt          
        resources:
          requests:
            cpu: "0.1m"
            memory: "64Mi"
        volumeMounts:
        -  mountPath: /data
           name: d-neo4j-0
        -  mountPath: /conf
           name: a-neo4j-0           